[{"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\index.js":"1","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\App.js":"2","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\API.js":"3","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Order.js":"4","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Login.js":"5","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Register.js":"6","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Dash.js":"7","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\index.js":"8","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\actions.js":"9","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\context.js":"10","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\reducer.js":"11","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\routers\\PrivateRoute.js":"12","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Home.js":"13","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\NavigationBar.js":"14","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\store.js":"15","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\rootReducer.js":"16","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-reducer.js":"17","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-types.js":"18","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-actions.js":"19","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cart\\Cart.js":"20","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cart\\CartItem.js":"21","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\Cooks.js":"22","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\Cook.js":"23","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookInfo.js":"24","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookListings.js":"25","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookListingCard.js":"26","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\ProductCard.js":"27"},{"size":392,"mtime":1610838708111,"results":"28","hashOfConfig":"29"},{"size":824,"mtime":1610941083194,"results":"30","hashOfConfig":"29"},{"size":2780,"mtime":1610940849253,"results":"31","hashOfConfig":"29"},{"size":546,"mtime":1610422789283,"results":"32","hashOfConfig":"29"},{"size":2369,"mtime":1610918577546,"results":"33","hashOfConfig":"29"},{"size":4437,"mtime":1610940849251,"results":"34","hashOfConfig":"29"},{"size":4745,"mtime":1610940849250,"results":"35","hashOfConfig":"29"},{"size":363,"mtime":1610814557860,"results":"36","hashOfConfig":"29"},{"size":1649,"mtime":1610948836321,"results":"37","hashOfConfig":"29"},{"size":999,"mtime":1610593024628,"results":"38","hashOfConfig":"29"},{"size":1711,"mtime":1610814557861,"results":"39","hashOfConfig":"29"},{"size":659,"mtime":1610684964671,"results":"40","hashOfConfig":"29"},{"size":411,"mtime":1610918577545,"results":"41","hashOfConfig":"29"},{"size":3073,"mtime":1610838708108,"results":"42","hashOfConfig":"29"},{"size":337,"mtime":1610948262444,"results":"43","hashOfConfig":"29"},{"size":190,"mtime":1610838708127,"results":"44","hashOfConfig":"29"},{"size":3365,"mtime":1610946587940,"results":"45","hashOfConfig":"29"},{"size":187,"mtime":1610838708126,"results":"46","hashOfConfig":"29"},{"size":1149,"mtime":1610949469847,"results":"47","hashOfConfig":"29"},{"size":2119,"mtime":1610838708099,"results":"48","hashOfConfig":"29"},{"size":1917,"mtime":1610949290240,"results":"49","hashOfConfig":"29"},{"size":928,"mtime":1610940849248,"results":"50","hashOfConfig":"29"},{"size":2095,"mtime":1610945201538,"results":"51","hashOfConfig":"29"},{"size":10019,"mtime":1610940849243,"results":"52","hashOfConfig":"29"},{"size":1221,"mtime":1610938967360,"results":"53","hashOfConfig":"29"},{"size":2717,"mtime":1610940849245,"results":"54","hashOfConfig":"29"},{"size":1421,"mtime":1610949419207,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"2uztju",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\index.js",[],["116","117"],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\App.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\API.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Order.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Login.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Register.js",["118"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormText, Container, Card, CardBody, Form, FormGroup, Label, Input, Button, Row, Col } from \"reactstrap\"\nimport API from \"../utils/API\";\n\n// TODO: Need logic to compare passwords within form\n// TODO: Show frontend error if a user attempts to signup twice\n// TODO: Now showing full register info? Probably in register thing\nfunction Register() {\n    const [registerUser, setRegisterUser] = useState({});\n    // const [profileInfo, setProfileInfo] = useState({});\n    const history = useHistory();\n\n    const handleRegistrationInputChange = (event) => {\n        const { name, value } = event.target;\n        setRegisterUser({ ...registerUser, [name]: value });\n    };\n\n    // const handleProfileInputChange = (event) => {\n    //     const { name, value } = event.target;\n    //     setProfileInfo({ ...profileInfo, [name]: value });\n    // }\n\n    const handleRegistration = (event) => {\n        event.preventDefault();\n        if (registerUser.firstName && registerUser.lastName && registerUser.email && registerUser.password) {\n            API.register({\n                firstName: registerUser.firstName,\n                lastName: registerUser.lastName,\n                email: registerUser.email,\n                password: registerUser.password,\n            }).then((res) => {\n                API.createProfile({ CookId: res.data.id });\n                setRegisterUser({});\n                history.push(\"/login\");\n            }).catch(err => console.log(err));\n        }\n    };\n\n    return <Container>\n        <Card>\n            <CardBody>\n                <h2 className=\"text-center mb-3\">Become a Homecook</h2>\n                <Form>\n                    <Row>\n                        <Col>\n                            <FormGroup>\n                                <Label for=\"firstName\">First Name</Label>\n                                <Input \n                                    className=\"form-control text-center\"\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    id=\"firstName\" \n                                    placeholder=\"First Name\"\n                                    onChange={handleRegistrationInputChange}\n                                />\n                            </FormGroup>\n                        </Col>\n                        <Col>\n                            <FormGroup>\n                                <Label for=\"lastName\">Last Name</Label>\n                                <Input \n                                    className=\"form-control text-center\"\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    id=\"lastName\" \n                                    placeholder=\"Last Name\"\n                                    onChange={handleRegistrationInputChange}\n                                />\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"email\"\n                            name=\"email\"\n                            id=\"email\" \n                            placeholder=\"Email\"\n                            onChange={handleRegistrationInputChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"password\">Password</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\" \n                            placeholder=\"Password\"\n                            onChange={handleRegistrationInputChange}\n                        />\n                    </FormGroup>\n                    {/* <FormGroup>\n                        <Label for=\"confirm\">Confirm Password</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"password\"\n                            id=\"confirm\" \n                            placeholder=\"Confirm Password\"\n                            onChange={e => setRegisterPassword(e.target.value)}\n                        />\n                    </FormGroup> */}\n                    {/* <FormGroup>\n                        <Label for=\"specialties\">Your Cooking Specialties</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"text\"\n                            name=\"specialties\"\n                            id=\"specialties\" \n                            placeholder=\"Southern, Comfort, Italian, Mexican, etc.\"\n                            onChange={handleProfileInputChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"bio\">Short Bio</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"text\"\n                            name=\"bio\"\n                            id=\"bio\" \n                            placeholder=\"Write something for prospective buyers\"\n                            onChange={handleProfileInputChange}\n                        />\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"cookImg\">Cook Profile Image</Label>\n                        <Input \n                            className=\"form-control text-center\" \n                            type=\"file\"\n                            name=\"cookImg\"\n                            id=\"cookImg\" \n                            onChange={handleProfileInputChange}\n                        />\n                        <FormText color=\"muted\">\n                            Upload a profile image. Buyer's trust cooks they can see!\n                        </FormText>\n                    </FormGroup> */}\n                    <Button \n                        className=\"btn btn-primary btn-block mt-5\"\n                        type=\"submit\"\n                        onClick={handleRegistration}\n                    >\n                        Register\n                    </Button>\n                </Form>\n            </CardBody>\n        </Card>\n    </Container>\n};\n\nexport default Register;","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Dash.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\index.js",["119"],"// Modified from:\n// See https://soshace.com/react-user-login-authentication-using-usecontext-and-usereducer/\n// See https://github.com/nero2009/login-auth-useContext\n\nimport { login, logout, update } from \"./actions\";\nimport { AuthProvider, useAuthDispatch, useAuthState } from \"./context\";\n\nexport { AuthProvider, useAuthState, useAuthDispatch, login, logout };","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\actions.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\context.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\AuthContext\\reducer.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\routers\\PrivateRoute.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\pages\\Home.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\NavigationBar.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\store.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\rootReducer.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-reducer.js",["120"],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-types.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\utils\\Redux\\Shopping\\shopping-actions.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cart\\Cart.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cart\\CartItem.js",["121"],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\Cooks.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\Cook.js",["122"],"import { useState, useEffect } from \"react\";\nimport { Modal, ModalHeader, ModalBody, Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\nimport ProductCard from \"./ProductCard\";\n\n// import { connect } from \"react-redux\";\n\nconst Cook = ({ cook }) => { // products\n    const [modal, setModal] = useState(false);\n    const toggle = () => setModal(!modal);\n    // const [cookListings, setCookListings] = useState(products);\n    // const [products, setProducts] = useState();\n\n    // console.log(\"Cook.js ~ incoming products from state\", products); // can we change this in useState here??\n    // console.log(\"Cook.js ~ cookListings\", cookListings);\n\n    // useEffect(() => {\n    //     setCookListings(cook.Listings);\n    //     console.log(\"Cook.js ~ useEffect ~ cookListings\", cookListings);\n    //     console.log(\"Cook.js ~ useEffect ~ products\", products);\n    // })\n\n    return (\n        <div>\n            <Card>\n                <CardImg top width=\"100%\" src={cook.Profile.cookImgURL} alt={cook.firstName} />\n                <CardBody>\n                    <CardTitle tag=\"h5\">{cook.firstName} {cook.lastName}</CardTitle>\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{cook.Profile.specialties}</CardSubtitle>\n                    <CardText>{cook.Profile.description}</CardText>\n                    <Button onClick={toggle}>Shop Homecook</Button> \n                </CardBody>\n            </Card>\n            <Modal isOpen={modal} toggle={toggle}>\n                <ModalHeader className=\"text-center\" toggle={toggle}>{cook.firstName}'s Kitchen</ModalHeader>\n                <ModalBody>\n                        {cook.Listings.map(product => (\n                            <ProductCard key={product.id} productData={product} />\n                        ))}\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\n// const mapStateToProps = state => {\n//     return {\n//         products: state.shop.products\n//     }\n// }\n// // export default Cook;\n// export default connect(mapStateToProps)(Cook);\nexport default Cook;","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookInfo.js",["123","124"],"import { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText, Button, Modal, ModalHeader, ModalBody, Form, Row, Col, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { useAuthState } from \"../../utils/AuthContext\";\nimport API from \"../../utils/API\";\n// import defaultUserImage from \"../../assets/default-user.jpg\";\n\nconst CookInfo = () => {\n    const [cookInfo, setCookInfo] = useState({});\n    const [updateInfo, setUpdateInfo] = useState({});\n    // const [uploadImage, setUploadImage] = useState(\"../../assets/default-user.jpg\");\n    // const [multerImage, setMulterImage] = useState({});\n    const [modal, setModal] = useState(false);\n    const history = useHistory();\n    const userDetails = useAuthState();\n    const toggle = () => setModal(!modal);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setUpdateInfo({ ...updateInfo, [name]: value });\n    };\n\n    // const handleUploadImage = event => {\n    //     // let imageObj = {};\n    //     let imageFormObj = new FormData();\n\n    //     imageFormObj.append(\"name\", \"TRYINGPLS\");\n    //     imageFormObj.append(\"img\", event.target.files[0]);\n    //     setMulterImage(URL.createObjectURL(event.target.files[0]));\n    //     API.createCookImage(imageFormObj).then((data) => {\n    //         if (data.data.success) {\n    //             alert(\"Image has been successfully uploaded!\");\n    //             console.log(\"this says we did it!\", data);\n    //         }\n    //     }).catch(err => console.log(err));\n        // console.log(\"cookInfo ~ handleUploadImage ~ imageFormObj:\", imageFormObj);\n        // console.log(\"cookInfo ~ handleUploadImage ~ multerImage:\", multerImage);\n    // };\n\n    const handleCookUpdate = event => {\n        event.preventDefault();\n\n        // TODO: How to get all these to resolve before we can get to getCookInfo()?\n\n        if (updateInfo.firstName) {\n            API.updateCook(userDetails.user.id, { firstName: updateInfo.firstName }).catch(err => console.log(err));\n        };\n\n        if (updateInfo.lastName) {\n            API.updateCook(userDetails.user.id, { lastName: updateInfo.lastName }).catch(err => console.log(err));\n        };\n\n        if (updateInfo.email) {\n            API.updateCook(userDetails.user.id, { email: updateInfo.email }).catch(err => console.log(err));\n        };\n\n        if (updateInfo.bio) {\n            API.updateProfile(userDetails.user.id, { bio: updateInfo.bio }).catch(err => console.log(err));\n        };\n\n        if (updateInfo.specialties) {\n            API.updateProfile(userDetails.user.id, { specialties: updateInfo.specialties }).catch(err => console.log(err));\n        };\n\n        if (updateInfo.location) {\n            API.updateProfile(userDetails.user.id, { location: updateInfo.location }).catch(err => console.log(err));\n        };\n\n        toggle();\n        history.replace(\"/\");\n        history.replace(\"/dash\");        \n    };\n\n    useEffect(() => {\n        API.getCook(userDetails.user.id)\n            .then(res => setCookInfo(res.data))\n            .catch(err => console.log(err));\n    }, [userDetails.user, updateInfo]);\n\n    return (\n        <div>\n            <Card>\n                {/* <CardImg top width=\"100%\" src={cookInfo.Profile.img} alt={cookInfo.firstName} /> */}\n                <CardBody>\n                    <CardTitle tag=\"h5\">{cookInfo.firstName} {cookInfo.lastName}</CardTitle>\n                    {/* <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{cookInfo.Profile.specialties}</CardSubtitle>\n                    <CardText>{cookInfo.Profile.bio}</CardText> */}\n                    <Button onClick={toggle}>Edit</Button>\n                </CardBody>\n            </Card>\n            <Modal isOpen={modal} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Edit Cook Profile</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <Row>\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"firstName\">First Name</Label>\n                                    <Input \n                                        className=\"form-control text-center\"\n                                        type=\"text\"\n                                        name=\"firstName\"\n                                        id=\"firstName\"\n                                        placeholder={cookInfo.firstName}\n                                        onChange={handleInputChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n                            <Col>\n                                <FormGroup>\n                                    <Label for=\"lastName\">Last Name</Label>\n                                    <Input \n                                        className=\"form-control text-center\"\n                                        type=\"text\"\n                                        name=\"lastName\"\n                                        id=\"lastName\"\n                                        placeholder={cookInfo.lastName}\n                                        onChange={handleInputChange}\n                                    />\n                                </FormGroup>\n                            </Col>\n                        </Row>\n                        <FormGroup>\n                            <Label for=\"email\">Email</Label>\n                            <Input \n                                className=\"form-control text-center\"\n                                type=\"email\"\n                                name=\"email\"\n                                id=\"email\"\n                                placeholder={cookInfo.email}\n                                onChange={handleInputChange}\n                            />\n                        </FormGroup>\n                        {/* specialties, bio, location, cookImg */}\n                        {/* <FormGroup>\n                            <Label for=\"specialties\">Specialties</Label>\n                            <Input \n                                className=\"form-control text-center\"\n                                type=\"text\"\n                                name=\"specialties\"\n                                id=\"specialties\"\n                                placeholder={cookInfo.Profile.specialties}\n                                onChange={handleInputChange}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"bio\">Cook Bio</Label>\n                            <Input \n                                className=\"form-control text-center\"\n                                type=\"text\"\n                                name=\"bio\"\n                                id=\"bio\"\n                                placeholder={cookInfo.Profile.bio}\n                                onChange={handleInputChange}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"location\">Location</Label>\n                            <Input \n                                className=\"form-control text-center\"\n                                type=\"text\"\n                                name=\"location\"\n                                id=\"location\"\n                                placeholder={cookInfo.Profile.location}\n                                onChange={handleInputChange}\n                            />\n                        </FormGroup> */}\n                        {/* <FormGroup>\n                            <Label for=\"cookImg\"/>\n                            <Input \n                                className=\"form-control text-center\"\n                                type=\"file\"\n                                name=\"cookImg\"\n                                id=\"cookImg\"\n                                onChange={e => handleUploadImage(e)}\n                            />\n                            <FormText color=\"muted\">Upload an image of your delicious homecooked meal to entice buyers</FormText>\n                        </FormGroup> */}\n                        <Button \n                            className=\"btn btn-primary btn-block mt-5\"\n                            type=\"submit\"\n                            onClick={handleCookUpdate}\n                        >\n                            Update\n                        </Button>\n                    </Form>\n                </ModalBody>\n            </Modal>\n        </div>\n    );\n};\n\nexport default CookInfo;","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookListings.js",[],"C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Cook\\CookListingCard.js",["125"],"import React from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardSubtitle, CardText, Button } from \"reactstrap\";\n\nconst CookListingCard = ({ listing }) => {\n    return (\n        <Card>\n            <CardImg top width=\"100%\" src={listing.img} alt={listing.food} />\n            <CardBody>\n                <CardTitle tag=\"h5\">\n                    <span className=\"float-left\">{listing.food}</span>\n                    <span className=\"float-right\">{listing.price}</span>\n                </CardTitle>\n                <br />\n                <CardText>{listing.description}</CardText>\n                {/* <Button>Edit</Button> */}\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default CookListingCard;","C:\\Users\\icynt\\coding\\bootcamp\\homework\\hometohome\\client\\src\\components\\Kitchen\\ProductCard.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":18},{"ruleId":"130","severity":1,"message":"134","line":5,"column":25,"nodeType":"132","messageId":"133","endLine":5,"endColumn":31},{"ruleId":"130","severity":1,"message":"135","line":4,"column":7,"nodeType":"132","messageId":"133","endLine":4,"endColumn":20},{"ruleId":"130","severity":1,"message":"136","line":2,"column":60,"nodeType":"132","messageId":"133","endLine":2,"endColumn":68},{"ruleId":"130","severity":1,"message":"137","line":1,"column":20,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":3,"column":150,"nodeType":"132","messageId":"133","endLine":3,"endColumn":158},{"ruleId":"138","severity":1,"message":"139","line":95,"column":8,"nodeType":"140","endLine":95,"endColumn":10,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":2,"column":46,"nodeType":"132","messageId":"133","endLine":2,"endColumn":58},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'FormText' is defined but never used.","Identifier","unusedVar","'update' is defined but never used.","'INITIAL_STATE' is assigned a value but never used.","'CardText' is defined but never used.","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userDetails.user.id'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'CardSubtitle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [userDetails.user.id]",{"range":"148","text":"149"},[3882,3884],"[userDetails.user.id]"]